#!/usr/bin/python -tt
# -*- coding: utf-8 -*-
#
# This tool helps you to rebase package to the latest version
# Copyright (C) 2013-2014 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# he Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Authors: Petr Hracek <phracek@redhat.com>
#          Tomas Hozza <thozza@redhat.com>


# It requires fedmsg package
from __future__ import print_function
import sys
import tempfile
import shutil

import sh
from rebasehelper.upstream_monitoring import UpstreamMonitoring

if len(sys.argv) != 3:
    print ('You have to specify package and new upstream version')
    print ('Like rebase-helper-fedmsg <package> <version>')
    sys.exit(1)

package = sys.argv[1]
version = sys.argv[2]

tmp = tempfile.mkdtemp(prefix='thn-', dir='/tmp')
rh_stuff = {}
url = 'http://pkgs.fedoraproject.org/cgit/{package}.git'.format(package=package)
sh.git.clone(url, tmp)
rh_upstream = UpstreamMonitoring()
rh_upstream.add_upstream_log_file()
rh_upstream.add_thn_info(tmp, package, version)
ret_val = rh_upstream.process_thn()
if int(ret_val) == 0:
    print ('Rebase package %s to %s was SUCCESSFUL.' % (package, version))
else:
    print ('Rebase package %s to %s FAILED. See for details.' % (package, version))

print ('Koji scratch build is available here: %s' % rh_upstream.get_build_log())
print ('Information about patches:\n%s' % '\n'.join(rh_upstream.get_rebased_patches()))
print ('Available log files generated by rebase-helper are:\n%s' % '\n'.join(rh_upstream.get_rh_logs()))
shutil.rmtree(tmp)


